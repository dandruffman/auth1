directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION
    | FIELD_DEFINITION

type Query {
    getUser(accessToken: String!): [User!]
    ConfirmSignUp(input: ConfirmSignUpInput!):Boolean!
    InitiateAuth(input: InitiateAuthInput!):AuthenticationResult
}

type Mutation {
    signUp(input: SignUpInput!): User
    ChangePassword(input: ChangePasswordInput!):Boolean!
    ForgotPassword(input: ForgotPasswordInput!): CodeDeliveryDetails
}

input SignUpInput {
    Username: String!
    UserAttributes:[AttributeType]
    Password: String!
    
}
input ConfirmSignUpInput{
    Username: String!
    ConfirmationCode: String!
}
input InitiateAuthInput{
    AuthFlow: String!
    AuthParameters: AuthParameters
    
}
input ChangePasswordInput{
    AccessToken:String!
    PreviousPassword:String!
    ProposedPassword:String!
}
input ForgotPasswordInput{
    Username:String!
}
type AuthenticationResult {
    AccessToken: String!
    ExpiresIn: Int!
    IdToken: String!
    RefreshToken: String!    
    TokenType: String! 
}
input AuthParameters{
    Username: String!
    Password: String!
}
type User {
    CodeDeliveryDetails: CodeDeliveryDetails
    UserConfirmed: Boolean!
    UserSub: ID!

}
type ConfirmUser {
   ConfirmUser:Boolean!
}
input AttributeType{
    Name:String!
    Value:String!
}
type CodeDeliveryDetails{
    AttributeName: String!
    DeliveryMedium: String!
    Destination: String!
}

scalar Time
scalar URI
